# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  push:
    tags:
      - 'v*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
          repository: WowOpenBox/BuildKit
          path: buildkit
        
      - name: Make the executable
        run: |
          ls
          $version=(git.exe describe --always --tags --match 'v*').Trim()
          cd buildkit
          mkdir OpenMultiBoxing.vfs\app
          cp ..\WowOpenBox.tkapp OpenMultiBoxing.vfs\app
          Add-Content -Path OpenMultiBoxing.vfs\tclkit.inf -Value "ProductVersion ""$version""" -PassThru
          tclkit\tclkit.exe sdx\sdx.kit wrap OpenMultiBoxing -runtime runtime.exe
          Rename-Item OpenMultiBoxing OpenMultiBoxing.exe
          .\upx.exe -q --ultra-brute --compress-resources=0 OpenMultiBoxing.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: .\buildkit\OpenMultiBoxing.exe
          asset_name: OpenMultiBoxing-${{ github.ref }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable

#      - uses: actions/upload-artifact@v2
#        with:
#          name: OpenMultiboxing-artifact
#          path: buildkit\OpenMultiBoxing.exe
